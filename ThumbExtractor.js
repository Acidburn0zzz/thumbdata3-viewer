var __awaiter=this&&this.__awaiter||function(e,t,s,i){return new(s||(s=Promise))(function(r,a){function n(e){try{o(i.next(e))}catch(e){a(e)}}function h(e){try{o(i.throw(e))}catch(e){a(e)}}function o(e){e.done?r(e.value):new s(function(t){t(e.value)}).then(n,h)}o((i=i.apply(e,t||[])).next())})};(e=>{const t=5242880;class s{constructor(){this.fileReader=new FileReader,this.fileReader.addEventListener("loadend",()=>{this.complete&&this.complete(this.fileReader.result)})}readAsArrayBuffer(e){return new Promise(t=>{this.complete=t,this.fileReader.readAsArrayBuffer(e)})}}let i;e.addEventListener("message",r=>{r.data.init&&(i&&i.cancel(),(i=new class{constructor(e){this.file=e,this.fileReader=new FileReader,this.imagePoints=[],this.markerStart=!1,this.jpegStart=0,this.readStartPos=0,this.scanStart=!1,this.scanHeader=[],this.cancelProcess=!1,this.fileReader.addEventListener("loadend",()=>{let e=this.markerStart,t=this.jpegStart,s=this.scanStart;const i=new Uint8Array(this.fileReader.result);for(let r=0;r<i.length;r++){const a=i[r];e?(216===a?(t=r-1+this.readStartPos,s=!1,this.scanHeader=[]):192===a||194===a?(s=!0,this.scanHeader=[]):196===a||219===a?s=!1:217===a?!s&&this.validHeader(this.scanHeader)?this.imagePoints.push([t,this.readStartPos+r+1]):(s=!1,this.scanHeader=[]):s&&this.scanHeader.push(255,a),e=!1):255===a?e=!0:s&&this.scanHeader.push(a)}this.scanStart=s,this.markerStart=e,this.jpegStart=t,this.readStartPos=this.nextPosition,this.readNextChunk()})}validHeader(e){if(e.length<5)return!1;const t=256*e[0]+e[1];return e.length===t}readNextChunk(){if(this.readStartPos>this.file.size||this.cancelProcess)this.done(this.imagePoints);else{const e=this.readStartPos+t,s=e>this.file.size?void 0:e,i=this.file.slice(this.readStartPos,s);this.nextPosition=e,this.fileReader.readAsArrayBuffer(i),this.progress(this.readStartPos,this.file.size)}}extractPoints(){return new Promise(e=>{this.done=e,this.readNextChunk()})}extractImages(e=this.imagePoints){return __awaiter(this,void 0,void 0,function*(){let t=new s,i=[];for(let s=0;s<e.length;s++){const[r,a]=e[s],n=this.file.slice(r,a),h=new Uint8Array(yield t.readAsArrayBuffer(n));if(i.push(URL.createObjectURL(new Blob([h],{type:"image/jpeg"}))),this.progress(s,e.length),this.cancelProcess)break}return i})}cancel(){this.cancelProcess=!0}}(r.data.init)).progress=((t,s)=>{const i=t/s*100,r=(t/1024).toFixed(0)+" kB / "+(s/1024).toFixed(0)+" kB";e.postMessage({progress:i,text:r})}),i.extractPoints().then(t=>(e.postMessage({status:"Extracting.."}),i.progress=((t,s)=>{const i=t/s*100,r=t+" / "+s;e.postMessage({progress:i,text:r})}),i.extractImages(t))).then(t=>{e.postMessage({images:t}),i=null}),e.postMessage({status:"Parsing"}))})})(self);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRodW1iRXh0cmFjdG9yLnRzIl0sIm5hbWVzIjpbInNlbGYiLCJSRUFEX0JVRkZFUiIsIlByb21pc2VSZWFkZXIiLCJbb2JqZWN0IE9iamVjdF0iLCJ0aGlzIiwiZmlsZVJlYWRlciIsIkZpbGVSZWFkZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiY29tcGxldGUiLCJyZXN1bHQiLCJibG9iIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWFkQXNBcnJheUJ1ZmZlciIsImV4dHJhY3RvciIsIm1zZyIsImRhdGEiLCJpbml0IiwiY2FuY2VsIiwiZmlsZSIsImltYWdlUG9pbnRzIiwibWFya2VyU3RhcnQiLCJqcGVnU3RhcnQiLCJyZWFkU3RhcnRQb3MiLCJzY2FuU3RhcnQiLCJzY2FuSGVhZGVyIiwiY2FuY2VsUHJvY2VzcyIsIlVpbnQ4QXJyYXkiLCJpIiwibGVuZ3RoIiwiYnl0ZSIsInZhbGlkSGVhZGVyIiwicHVzaCIsIm5leHRQb3NpdGlvbiIsInJlYWROZXh0Q2h1bmsiLCJoZWFkZXIiLCJoZWFkZXJMZW5ndGgiLCJzaXplIiwiZG9uZSIsInJlYWRUbyIsInVuZGVmaW5lZCIsIm5leHRTbGljZSIsInNsaWNlIiwicHJvZ3Jlc3MiLCJwb2ludHMiLCJpbWFnZXMiLCJyZWFkU3RhcnQiLCJyZWFkRW5kIiwiZmlsZVNsaWNlIiwiYnVmZmVyIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiQmxvYiIsInR5cGUiLCJwb3NpdGlvbiIsInRvdGFsIiwidGV4dCIsInRvRml4ZWQiLCJwb3N0TWVzc2FnZSIsImV4dHJhY3RQb2ludHMiLCJ0aGVuIiwic3RhdHVzIiwiZXh0cmFjdEltYWdlcyJdLCJtYXBwaW5ncyI6InVTQXNCQSxDQUFFQSxJQUNFLE1BQU1DLEVBQWMsY0FFcEJDLEVBUUlDLGNBQ0lDLEtBQUtDLFdBQWEsSUFBSUMsV0FDdEJGLEtBQUtDLFdBQVdFLGlCQUFpQixVQUFXLEtBQ3BDSCxLQUFLSSxVQUNMSixLQUFLSSxTQUFTSixLQUFLQyxXQUFXSSxVQUkxQ04sa0JBQWtCTyxHQUNkLE9BQU8sSUFBSUMsUUFBUUMsSUFDZlIsS0FBS0ksU0FBV0ksRUFDaEJSLEtBQUtDLFdBQVdRLGtCQUFrQkgsTUEySTlDLElBQUlJLEVBRUpkLEVBQUtPLGlCQUFpQixVQUFZUSxJQUMxQkEsRUFBSUMsS0FBS0MsT0FDTEgsR0FDQUEsRUFBVUksVUFHZEosRUFBWSxVQWhJaEJYLFlBQVlnQixHQUNSZixLQUFLZSxLQUFPQSxFQUNaZixLQUFLQyxXQUFhLElBQUlDLFdBQ3RCRixLQUFLZ0IsZUFDTGhCLEtBQUtpQixhQUFjLEVBQ25CakIsS0FBS2tCLFVBQVksRUFDakJsQixLQUFLbUIsYUFBZSxFQUNwQm5CLEtBQUtvQixXQUFZLEVBQ2pCcEIsS0FBS3FCLGNBQ0xyQixLQUFLc0IsZUFBZ0IsRUFFckJ0QixLQUFLQyxXQUFXRSxpQkFBaUIsVUFBVyxLQUN4QyxJQUFJYyxFQUFjakIsS0FBS2lCLFlBQ25CQyxFQUFZbEIsS0FBS2tCLFVBQ2pCRSxFQUFZcEIsS0FBS29CLFVBRXJCLE1BQU1SLEVBQW1CLElBQUlXLFdBQXdCdkIsS0FBS0MsV0FBV0ksUUFFckUsSUFBSyxJQUFJbUIsRUFBSSxFQUFHQSxFQUFJWixFQUFLYSxPQUFRRCxJQUFLLENBQ2xDLE1BQU1FLEVBQU9kLEVBQUtZLEdBRWJQLEdBT1ksTUFBVFMsR0FDQVIsRUFBWU0sRUFBSSxFQUFJeEIsS0FBS21CLGFBQ3pCQyxHQUFZLEVBQ1pwQixLQUFLcUIsZUFDVyxNQUFUSyxHQUEwQixNQUFUQSxHQUl4Qk4sR0FBWSxFQUNacEIsS0FBS3FCLGVBQ1csTUFBVEssR0FBMEIsTUFBVEEsRUFDeEJOLEdBQVksRUFDSSxNQUFUTSxHQUNGTixHQUFhcEIsS0FBSzJCLFlBQVkzQixLQUFLcUIsWUFDcENyQixLQUFLZ0IsWUFBWVksTUFBTVYsRUFBV2xCLEtBQUttQixhQUFlSyxFQUFJLEtBRzFESixHQUFZLEVBQ1pwQixLQUFLcUIsZUFFRkQsR0FDUHBCLEtBQUtxQixXQUFXTyxLQUFLLElBQU1GLEdBRS9CVCxHQUFjLEdBN0JELE1BQVRTLEVBQ0FULEdBQWMsRUFDUEcsR0FDUHBCLEtBQUtxQixXQUFXTyxLQUFLRixHQThCakMxQixLQUFLb0IsVUFBWUEsRUFDakJwQixLQUFLaUIsWUFBY0EsRUFDbkJqQixLQUFLa0IsVUFBWUEsRUFDakJsQixLQUFLbUIsYUFBZW5CLEtBQUs2QixhQUV6QjdCLEtBQUs4QixrQkFJYi9CLFlBQVlnQyxHQUNSLEdBQUlBLEVBQU9OLE9BQVMsRUFDaEIsT0FBTyxFQUVYLE1BQU1PLEVBQTJCLElBQVpELEVBQU8sR0FBV0EsRUFBTyxHQUU5QyxPQUFPQSxFQUFPTixTQUFXTyxFQUc3QmpDLGdCQUNJLEdBQUlDLEtBQUttQixhQUFlbkIsS0FBS2UsS0FBS2tCLE1BQVFqQyxLQUFLc0IsY0FDM0N0QixLQUFLa0MsS0FBS2xDLEtBQUtnQixpQkFDWixDQUNILE1BQU1hLEVBQWU3QixLQUFLbUIsYUFBZXRCLEVBQ25Dc0MsRUFBU04sRUFBZTdCLEtBQUtlLEtBQUtrQixVQUFPRyxFQUFZUCxFQUNyRFEsRUFBWXJDLEtBQUtlLEtBQUt1QixNQUFNdEMsS0FBS21CLGFBQWNnQixHQUVyRG5DLEtBQUs2QixhQUFlQSxFQUNwQjdCLEtBQUtDLFdBQVdRLGtCQUFrQjRCLEdBRWxDckMsS0FBS3VDLFNBQVN2QyxLQUFLbUIsYUFBY25CLEtBQUtlLEtBQUtrQixPQUluRGxDLGdCQUNJLE9BQU8sSUFBSVEsUUFBUUMsSUFDZlIsS0FBS2tDLEtBQU8xQixFQUNaUixLQUFLOEIsa0JBSVAvQixjQUFjeUMsRUFBK0J4QyxLQUFLZ0IsNkRBQ3BELElBQUlOLEVBQVksSUFBSVosRUFDaEIyQyxLQUVKLElBQUssSUFBSWpCLEVBQUksRUFBR0EsRUFBSWdCLEVBQU9mLE9BQVFELElBQUssQ0FDcEMsTUFBT2tCLEVBQVdDLEdBQVdILEVBQU9oQixHQUM5Qm9CLEVBQVk1QyxLQUFLZSxLQUFLdUIsTUFBTUksRUFBV0MsR0FDdkNFLEVBQVMsSUFBSXRCLGlCQUFpQmIsRUFBVUQsa0JBQWtCbUMsSUFNaEUsR0FKQUgsRUFBT2IsS0FBS2tCLElBQUlDLGdCQUFnQixJQUFJQyxNQUFNSCxJQUFXSSxLQUFNLGlCQUUzRGpELEtBQUt1QyxTQUFTZixFQUFHZ0IsRUFBT2YsUUFFcEJ6QixLQUFLc0IsY0FDTCxNQUdSLE9BQU9tQixJQUdYMUMsU0FDSUMsS0FBS3NCLGVBQWdCLElBWU9YLEVBQUlDLEtBQUtDLE9BRTNCMEIsU0FBVyxFQUFDVyxFQUFrQkMsS0FDcEMsTUFBTVosRUFBWVcsRUFBV0MsRUFBUyxJQUNoQ0MsR0FBUUYsRUFBVyxNQUFNRyxRQUFRLEdBQUssVUFBWUYsRUFBUSxNQUFNRSxRQUFRLEdBQUssTUFDbkZ6RCxFQUFLMEQsYUFBY2YsU0FBVUEsRUFBVWEsS0FBTUEsTUFHakQxQyxFQUFVNkMsZ0JBQ0xDLEtBQUt4QyxJQUNGcEIsRUFBSzBELGFBQWNHLE9BQVEsaUJBQzNCL0MsRUFBVTZCLFNBQVcsRUFBQ1csRUFBa0JDLEtBQ3BDLE1BQU1aLEVBQVlXLEVBQVdDLEVBQVMsSUFDaENDLEVBQU9GLEVBQVcsTUFBUUMsRUFDaEN2RCxFQUFLMEQsYUFBY2YsU0FBVUEsRUFBVWEsS0FBTUEsTUFFMUMxQyxFQUFVZ0QsY0FBYzFDLEtBRWxDd0MsS0FBS2YsSUFDRjdDLEVBQUswRCxhQUFjYixPQUFRQSxJQUMzQi9CLEVBQVksT0FHcEJkLEVBQUswRCxhQUNERyxPQUFRLGdCQWpNeEIsQ0FxTUc3RCIsImZpbGUiOiJUaHVtYkV4dHJhY3Rvci5qcyIsInNvdXJjZVJvb3QiOiJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20veDBhL3RodW1iZGF0YTMtdmlld2VyL21hc3Rlci9zcmMvIn0=
